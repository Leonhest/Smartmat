# This file is a template, and might need editing before it works on your project.
# This is a sample GitLab CI/CD configuration file that should run without any modifications.
# It demonstrates a basic 3 stage CI/CD pipeline. Instead of real tests or scripts,
# it uses echo commands to simulate the pipeline execution.
#
# A pipeline is composed of independent jobs that run scripts, grouped into stages.
# Stages run in sequential order, but jobs within stages run in parallel.
#
# For more information, see: https://docs.gitlab.com/ee/ci/yaml/index.html#stages
#
# You can copy and paste this template into a new `.gitlab-ci.yml` file.
# You should not add this template to an existing `.gitlab-ci.yml` file by using the `include:` keyword.
#
# To contribute improvements to CI/CD templates, please follow the Development guide at:
# https://docs.gitlab.com/ee/development/cicd/templates.html
# This specific template is located at:
# https://gitlab.com/gitlab-org/gitlab/-/blob/master/lib/gitlab/ci/templates/Getting-Started.gitlab-ci.yml


image: maven:eclipse-temurin
stages:
  - build
  - test
  - deploy

build-backend-job:
  stage: build
  script:
    - cd backend
    - mvn install -B -DskipTests # Skip tests during build phase

build-frontend-job:
  image: node:16
  stage: build
  script:
    - cd frontend
    - npm install
    - npm run build

unit-test-backend-job:
  stage: test
  script:
    - cd backend
    - mvn clean test

unit-test-frontend-job:
  image: node:16
  stage: test
  script:
    - cd frontend
    - npm install
    - npm run test:unit


e2e-test-frontend-job:
  image: cypress/base:16.13.0 # Use the Cypress base image with Node 16.13.0
  stage: test
  script:
    - cd frontend
    - npm install
    - npx vite preview --port 4173 &
    - sleep 10
    - npx cypress run --e2e



generatepdf:
  image: ubuntu:20.04  # vi kjører dette i en docker container, som kjører Ubuntu Linux
  stage: deploy # vi kjører den parallelt med å publisere javadoc til Pages
  script:
    - apt-get update  # apt-get er en pakkehåndterer som kan laste ned og installere pakker på linux-system
    - apt-get install -y wget  # installerer et tool som heter "wget", som kan fyre av HTML-requester på kommandolinja
    - apt-get install -y fontconfig libfreetype6 libjpeg-turbo8 libpng16-16 libx11-6 libxcb1 libxext6 libxrender1 xfonts-75dpi xfonts-base  # installerer en bunsj med libs vi trenger for konverteringen til PDF
    - wget https://github.com/wkhtmltopdf/packaging/releases/download/0.12.6-1/wkhtmltox_0.12.6-1.focal_amd64.deb  # Henter HTML-til-PDF-konverterer fra git. Vi bruker denne spesifikke pakken fordi vi vet at den fungerer i miljøet vi kjører i
    - dpkg -i wkhtmltox_0.12.6-1.focal_amd64.deb  # Installerer pakken vi lastet ned i forrige steg
    - apt-get -y install nodejs  # installerer nodejs
    - apt-get -y install npm  # installerer npm, som er en pakkehåndterer (litt likt apt-get) for (hovedsaklig) javascript-biblioteker
    - npm install -g github-wikito-converter  # installerer wiki-til-html-konverterer via npm 
    - apt-get -y install git  # installerer git
    - export my_url="${CI_PROJECT_URL:8}" # Fjerner https:// fra URLen
    - export final_url="https://gitlab-ci-token:$CI_JOB_TOKEN@$my_url"  # Bruker CI-token for å omgå krav til brukernavn/passord
    - git clone "$final_url.wiki.git"  # hver eneste gitlab-wiki ligger i et eget repo, og kan klones med git som man kloner andre prosjekter
    - gwtc $CI_PROJECT_NAME.wiki  # NB! DERSOM DENNE FEILER, ERSTATT MED NAVNET PÅ REPOET (enkelte gitlab-instanser ser ut til å gi denne feil verdi for gruppeprosjekter)
    - wkhtmltopdf documentation.html wiki.pdf  # Dette konverterer fra HTML til PDF
  artifacts:
    paths:
     - wiki.pdf  # Vi gjør fila tilgjengelig som en nedlastbar artefakt (CI/CD -> Pipelines, deretter ikon helt til høyre for bygget). Fila kalles wiki.pdf.
  only: 
    - web  # Only web gjør at vi kun kjører denne delen av pipeline når en trykker på knappen "Run pipeline"


# NB Javadoc genereres IKKE under bygging av prosjektet. Man må kjøre javadoc lokalt og legge til katalogen (med navnet "javadoc")
# til roten av prosjektet. Ellers vil denne delen feile
pages:
  stage: deploy
  script:
  - mkdir .public
  - cp -r javadoc/* .public
  - mv .public public
  artifacts:
    paths:
    - public
  only:
  - development
